/*
 * WARNING: This file was automatically generated by the generate_mappings.php script.
 * NO DONT MODIFY THIS FILE.
 *
 * UPDATE INSTRUCTIONS:
 * bash generate_runtime_mappings.sh
 */
<?php
function generateMappings($num) {
    $out = [];
    $baseMapping = [
        'name' => 'Runtime',
        'args' => []
    ];
    //$out[] = $baseMapping;
    generateMappingsRecursive($out, $baseMapping, $num);
    return $out;
}

function generateMappingsRecursive(&$out, $baseMapping, $num) {
    if ($num === 0) return;
    $out[] = generateNextMapping($baseMapping, false);
    generateMappingsRecursive($out, $out[count($out)-1], $num-1);
    $out[] = generateNextMapping($baseMapping, true);
    generateMappingsRecursive($out, $out[count($out)-1], $num-1);
}

function generateNextMapping($mapping, $structParam) {
    $out = $mapping;
    $out['name'] .= ($structParam ? '1' : '0');
    $out['args'][] = ($structParam ? 'Structure.ByValue' : 'Object');

    return $out;
}

?>
package ca.weblite.objc;

import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;

/**
 * A JNA wrapper around the objective-c runtime.  This contains all of the functions
 * needed to interact with the runtime (e.g. send messages, etc..).
 *
 * <h2>Sample Usage</h2>
 * <script src="https://gist.github.com/3974488.js?file=SampleLowLevelAPI.java"></script>
 *
 * @author shannah
 * @see <a href="https://developer.apple.com/library/mac/#documentation/Cocoa/Reference/ObjCRuntimeRef/Reference/reference.html">Objective-C Runtime Reference</a>
 * @version $Id: $Id
 * @since 1.1
 */
public interface RuntimeMappings {

    <?php foreach (generateMappings(7) as $mapping ):?>

    public static interface <?= $mapping['name'] ?> extends Library {
        public static <?= $mapping['name'] ?> INSTANCE = (<?= $mapping['name'] ?>) Native.loadLibrary("objc.A", <?= $mapping['name'] ?>.class);

        public long objc_msgSend(Pointer theReceiver, Pointer theSelector,
            <?php
            $i=0;
            $len=count($mapping['args']);
            foreach ($mapping['args'] as $arg):
                $comma = ",";
                if ($i == $len-1) {
                    $comma = '';
                }
            ?>
                <?= $arg ?> arg<?= ($i++).$comma ?>

            <?php endforeach; ?>
        );
        public double objc_msgSend_fpret(Pointer theReceiver, Pointer theSelector,
            <?php
            $i=0;
            $len=count($mapping['args']);
            foreach ($mapping['args'] as $arg):
                $comma = ",";
                if ($i == $len-1) {
                    $comma = '';
                }
            ?>
                <?= $arg ?> arg<?= ($i++).$comma ?>

            <?php endforeach; ?>
        );

    }

    <?php endforeach;?>
}
